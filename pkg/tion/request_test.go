package tion

import (
	"reflect"
	"testing"
)

func TestRequest01(t *testing.T) {
	expct := []byte{0x3d, 0x02, 0x01, 0x17, 0x02, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a}
	bt := BuildRequest(false, true, true, 1, 2, 23, false)
	if !reflect.DeepEqual(expct, bt) {
		t.Fatal(bt)
	}
}

func TestRequest02(t *testing.T) {
	expct := []byte{0x3d, 0x02, 0x01, 0x0e, 0x02, 0x0b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a}
	bt := BuildRequest(true, true, true, 1, 2, 14, false)
	if !reflect.DeepEqual(expct, bt) {
		t.Fatal(bt)
	}
}

func TestRequest03(t *testing.T) {
	expct := []byte{0x3d, 0x02, 0x01, 0x12, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a}
	bt := BuildRequest(true, true, true, 1, 0, 18, false)
	if !reflect.DeepEqual(expct, bt) {
		t.Fatal(bt)
	}
}

func TestRequest04(t *testing.T) {
	expct := []byte{0x3d, 0x02, 0x01, 0x12, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a}
	bt := BuildRequest(true, true, false, 1, 1, 18, false)
	if !reflect.DeepEqual(expct, bt) {
		t.Fatal(bt)
	}
}
